package SpiderCorba;


/**
* SpiderCorba/_AgentSideStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../../idl/SpiderAgentAPI.idl
* Sunday, June 17, 2018 9:15:03 AM ICT
*/

public class _AgentSideStub extends org.omg.CORBA.portable.ObjectImpl implements SpiderCorba.AgentSide
{


  //Upload app function
  public void onUploadStartup (String uploadClusterId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("onUploadStartup", true);
                $out.write_wstring (uploadClusterId);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                onUploadStartup (uploadClusterId        );
            } finally {
                _releaseReply ($in);
            }
  } // onUploadStartup

  public SpiderCorba.SpiderDefinePackage.UploadConfig getUploadConfig (int mappingId, int mappingType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getUploadConfig", true);
                $out.write_long (mappingId);
                $out.write_long (mappingType);
                $in = _invoke ($out);
                SpiderCorba.SpiderDefinePackage.UploadConfig $result = SpiderCorba.SpiderDefinePackage.UploadConfigHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getUploadConfig (mappingId, mappingType        );
            } finally {
                _releaseReply ($in);
            }
  } // getUploadConfig

  public void updateUploadedVideo (int jobId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateUploadedVideo", true);
                $out.write_long (jobId);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updateUploadedVideo (jobId        );
            } finally {
                _releaseReply ($in);
            }
  } // updateUploadedVideo


  //Other function
  public SpiderCorba.SpiderDefinePackage.AuthenInfo getAuthenInfo (int mappingId, int mappingType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getAuthenInfo", true);
                $out.write_long (mappingId);
                $out.write_long (mappingType);
                $in = _invoke ($out);
                SpiderCorba.SpiderDefinePackage.AuthenInfo $result = SpiderCorba.SpiderDefinePackage.AuthenInfoHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getAuthenInfo (mappingId, mappingType        );
            } finally {
                _releaseReply ($in);
            }
  } // getAuthenInfo

  public SpiderCorba.SpiderDefinePackage.ClusterInfo getClusterInfo (int mappingId, int mappingType, int clusterType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getClusterInfo", true);
                $out.write_long (mappingId);
                $out.write_long (mappingType);
                $out.write_long (clusterType);
                $in = _invoke ($out);
                SpiderCorba.SpiderDefinePackage.ClusterInfo $result = SpiderCorba.SpiderDefinePackage.ClusterInfoHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getClusterInfo (mappingId, mappingType, clusterType        );
            } finally {
                _releaseReply ($in);
            }
  } // getClusterInfo

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:SpiderCorba/AgentSide:1.0", 
    "IDL:SpiderCorba/SpiderDefine:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _AgentSideStub
