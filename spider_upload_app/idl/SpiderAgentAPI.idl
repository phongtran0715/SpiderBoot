module SpiderCorba
{
  interface SpiderDefine
  {
     struct VideoInfo
     {
          wstring videoId;
          wstring title;
          wstring tags;
          wstring description;
          wstring thumbnail;
          wstring vDownloadPath;
          wstring vRenderPath;
          long mappingId;
          long mappingType;
          long processStatus;
          long license;
    };

    struct UploadConfig
    {
            wstring vTitleTemp;
            wstring vDescTemp;
            wstring vTagsTemp;
            boolean enableTitle;
            boolean enableDes;
            boolean enableTags;
    };
    struct AuthenInfo
    {
            wstring userName;
            wstring apiKey;
            wstring clientSecret;
            wstring clientId;
    };
	struct ClusterInfo
    {
            wstring clusterIp;
            wstring userName;
            wstring password;
    };
  };

  interface UploadSide : SpiderDefine
  {
        boolean createUploadTimer(in wstring cHomeId);
        boolean deleteUploadTimer(in wstring cHomeId);
        boolean createUploadJob(in long jobId, in VideoInfo vInfo, in wstring cHomeId);
		boolean deleteUploadJob(in long jobId, in wstring cHomeId);
  };

  interface AgentSide : SpiderDefine
  {
      //Upload app function
      void onUploadStartup(in wstring uploadClusterId);
      UploadConfig getUploadConfig(in long mappingId, in long mappingType);
      void updateUploadedVideo (in long jobId);

      //Other function
      AuthenInfo getAuthenInfo(in long mappingId, in long mappingType);
	  ClusterInfo getClusterInfo (in long mappingId, in long mappingType, in long clusterType);
  };
};
