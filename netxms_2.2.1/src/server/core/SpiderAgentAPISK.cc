// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "SpiderAgentAPI.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



void
SpiderCorba::SpiderDefine::VideoInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(videoId,0);
  _n.marshalWString(title,0);
  _n.marshalWString(tags,0);
  _n.marshalWString(description,0);
  _n.marshalWString(thumbnail,0);
  _n.marshalWString(vDownloadPath,0);
  _n.marshalWString(vRenderPath,0);
  mappingId >>= _n;
  processStatus >>= _n;
  license >>= _n;

}

void
SpiderCorba::SpiderDefine::VideoInfo::operator<<= (cdrStream &_n)
{
  videoId = _n.unmarshalWString(0);
  title = _n.unmarshalWString(0);
  tags = _n.unmarshalWString(0);
  description = _n.unmarshalWString(0);
  thumbnail = _n.unmarshalWString(0);
  vDownloadPath = _n.unmarshalWString(0);
  vRenderPath = _n.unmarshalWString(0);
  (::CORBA::Long&)mappingId <<= _n;
  (::CORBA::Long&)processStatus <<= _n;
  (::CORBA::Long&)license <<= _n;

}

SpiderCorba::SpiderDefine_ptr SpiderCorba::SpiderDefine_Helper::_nil() {
  return ::SpiderCorba::SpiderDefine::_nil();
}

::CORBA::Boolean SpiderCorba::SpiderDefine_Helper::is_nil(::SpiderCorba::SpiderDefine_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::SpiderDefine_Helper::release(::SpiderCorba::SpiderDefine_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::SpiderDefine_Helper::marshalObjRef(::SpiderCorba::SpiderDefine_ptr obj, cdrStream& s) {
  ::SpiderCorba::SpiderDefine::_marshalObjRef(obj, s);
}

SpiderCorba::SpiderDefine_ptr SpiderCorba::SpiderDefine_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::SpiderDefine::_unmarshalObjRef(s);
}

void SpiderCorba::SpiderDefine_Helper::duplicate(::SpiderCorba::SpiderDefine_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_duplicate(::SpiderCorba::SpiderDefine_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_SpiderDefine _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_SpiderDefine* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_SpiderDefine;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::SpiderDefine::_PD_repoId = "IDL:SpiderCorba/SpiderDefine:1.0";


SpiderCorba::_objref_SpiderDefine::~_objref_SpiderDefine() {
  
}


SpiderCorba::_objref_SpiderDefine::_objref_SpiderDefine(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::SpiderDefine::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_SpiderDefine::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}

SpiderCorba::_pof_SpiderDefine::~_pof_SpiderDefine() {}


omniObjRef*
SpiderCorba::_pof_SpiderDefine::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_SpiderDefine(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_SpiderDefine::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;
  
  return 0;
}

const SpiderCorba::_pof_SpiderDefine _the_pof_SpiderCorba_mSpiderDefine;

SpiderCorba::_impl_SpiderDefine::~_impl_SpiderDefine() {}


::CORBA::Boolean
SpiderCorba::_impl_SpiderDefine::_dispatch(omniCallHandle& _handle)
{
  

  
  return 0;
}

void*
SpiderCorba::_impl_SpiderDefine::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_SpiderDefine::_mostDerivedRepoId()
{
  return ::SpiderCorba::SpiderDefine::_PD_repoId;
}

void
SpiderCorba::DownloadSide::DownloadConfig::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(cHomeId,0);
  _n.marshalWString(cMonitorId,0);
  _n.marshalWString(downloadClusterId,0);
  timerInterval >>= _n;
  synStatus >>= _n;

}

void
SpiderCorba::DownloadSide::DownloadConfig::operator<<= (cdrStream &_n)
{
  cHomeId = _n.unmarshalWString(0);
  cMonitorId = _n.unmarshalWString(0);
  downloadClusterId = _n.unmarshalWString(0);
  (::CORBA::Long&)timerInterval <<= _n;
  (::CORBA::Long&)synStatus <<= _n;

}

SpiderCorba::DownloadSide_ptr SpiderCorba::DownloadSide_Helper::_nil() {
  return ::SpiderCorba::DownloadSide::_nil();
}

::CORBA::Boolean SpiderCorba::DownloadSide_Helper::is_nil(::SpiderCorba::DownloadSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::DownloadSide_Helper::release(::SpiderCorba::DownloadSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::DownloadSide_Helper::marshalObjRef(::SpiderCorba::DownloadSide_ptr obj, cdrStream& s) {
  ::SpiderCorba::DownloadSide::_marshalObjRef(obj, s);
}

SpiderCorba::DownloadSide_ptr SpiderCorba::DownloadSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::DownloadSide::_unmarshalObjRef(s);
}

void SpiderCorba::DownloadSide_Helper::duplicate(::SpiderCorba::DownloadSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::DownloadSide_ptr
SpiderCorba::DownloadSide::_duplicate(::SpiderCorba::DownloadSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::DownloadSide_ptr
SpiderCorba::DownloadSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::DownloadSide_ptr
SpiderCorba::DownloadSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::DownloadSide_ptr
SpiderCorba::DownloadSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_DownloadSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_DownloadSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_DownloadSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::DownloadSide::_PD_repoId = "IDL:SpiderCorba/DownloadSide:1.0";


SpiderCorba::_objref_DownloadSide::~_objref_DownloadSide() {
  
}


SpiderCorba::_objref_DownloadSide::_objref_DownloadSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::DownloadSide::_PD_repoId, ior, id, 1),
   _objref_SpiderDefine(ior, id)
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_DownloadSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::DownloadSide::_PD_repoId)
    return (::SpiderCorba::DownloadSide_ptr) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::DownloadSide::_PD_repoId))
    return (::SpiderCorba::DownloadSide_ptr) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderCorba::DownloadSide::createDownloadJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cSpiderCorba_mDownloadSide_mDownloadConfig
class _0RL_cd_bcb7b54210ff8436_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::DownloadSide::DownloadConfig_var arg_1_;
  const SpiderCorba::DownloadSide::DownloadConfig* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_bcb7b54210ff8436_00000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const SpiderCorba::DownloadSide::DownloadConfig&) *arg_1 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_00000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = new SpiderCorba::DownloadSide::DownloadConfig;
  (SpiderCorba::DownloadSide::DownloadConfig&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

void _0RL_cd_bcb7b54210ff8436_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_bcb7b54210ff8436_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_bcb7b54210ff8436_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_00000000* tcd = (_0RL_cd_bcb7b54210ff8436_00000000*)cd;
  SpiderCorba::_impl_DownloadSide* impl = (SpiderCorba::_impl_DownloadSide*) svnt->_ptrToInterface(SpiderCorba::DownloadSide::_PD_repoId);
  tcd->result = impl->createDownloadJob(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_DownloadSide::createDownloadJob(::CORBA::Long jobId, const ::SpiderCorba::DownloadSide::DownloadConfig& downloadCfg)
{
  _0RL_cd_bcb7b54210ff8436_00000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_10000000, "createDownloadJob", 18);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::DownloadSide::DownloadConfig&) downloadCfg;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::DownloadSide::modifyDownloadJob

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_00000000* tcd = (_0RL_cd_bcb7b54210ff8436_00000000*)cd;
  SpiderCorba::_impl_DownloadSide* impl = (SpiderCorba::_impl_DownloadSide*) svnt->_ptrToInterface(SpiderCorba::DownloadSide::_PD_repoId);
  tcd->result = impl->modifyDownloadJob(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_DownloadSide::modifyDownloadJob(::CORBA::Long jobId, const ::SpiderCorba::DownloadSide::DownloadConfig& downloadCfg)
{
  _0RL_cd_bcb7b54210ff8436_00000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_20000000, "modifyDownloadJob", 18);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::DownloadSide::DownloadConfig&) downloadCfg;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::DownloadSide::deleteDownloadJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cwstring
class _0RL_cd_bcb7b54210ff8436_30000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_30000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::WString_var arg_1_;
  const ::CORBA::WChar* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_bcb7b54210ff8436_30000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  _n.marshalWString(arg_1,0);

}

void _0RL_cd_bcb7b54210ff8436_30000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = _n.unmarshalWString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_bcb7b54210ff8436_30000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_bcb7b54210ff8436_30000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_bcb7b54210ff8436_30000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_30000000* tcd = (_0RL_cd_bcb7b54210ff8436_30000000*)cd;
  SpiderCorba::_impl_DownloadSide* impl = (SpiderCorba::_impl_DownloadSide*) svnt->_ptrToInterface(SpiderCorba::DownloadSide::_PD_repoId);
  tcd->result = impl->deleteDownloadJob(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_DownloadSide::deleteDownloadJob(::CORBA::Long jobId, const ::CORBA::WChar* downloadClusterId)
{
  _0RL_cd_bcb7b54210ff8436_30000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_40000000, "deleteDownloadJob", 18);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = downloadClusterId;

  _invoke(_call_desc);
  return _call_desc.result;


}

SpiderCorba::_pof_DownloadSide::~_pof_DownloadSide() {}


omniObjRef*
SpiderCorba::_pof_DownloadSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_DownloadSide(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_DownloadSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::DownloadSide::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;


  return 0;
}

const SpiderCorba::_pof_DownloadSide _the_pof_SpiderCorba_mDownloadSide;

SpiderCorba::_impl_DownloadSide::~_impl_DownloadSide() {}


::CORBA::Boolean
SpiderCorba::_impl_DownloadSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "createDownloadJob")) {

    _0RL_cd_bcb7b54210ff8436_00000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_10000000, "createDownloadJob", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "modifyDownloadJob")) {

    _0RL_cd_bcb7b54210ff8436_00000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_20000000, "modifyDownloadJob", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteDownloadJob")) {

    _0RL_cd_bcb7b54210ff8436_30000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_40000000, "deleteDownloadJob", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_SpiderDefine*)this)->
      _impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
SpiderCorba::_impl_DownloadSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::DownloadSide::_PD_repoId)
    return (::SpiderCorba::_impl_DownloadSide*) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::DownloadSide::_PD_repoId))
    return (::SpiderCorba::_impl_DownloadSide*) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_DownloadSide::_mostDerivedRepoId()
{
  return ::SpiderCorba::DownloadSide::_PD_repoId;
}

void
SpiderCorba::RenderSide::RenderConfig::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(vIntroTemp,0);
  _n.marshalWString(vOutroTemp,0);
  _n.marshalWString(vLogoTemp,0);
  _n.marshalBoolean(enableIntro);
  _n.marshalBoolean(enableOutro);
  _n.marshalBoolean(enableLogo);

}

void
SpiderCorba::RenderSide::RenderConfig::operator<<= (cdrStream &_n)
{
  vIntroTemp = _n.unmarshalWString(0);
  vOutroTemp = _n.unmarshalWString(0);
  vLogoTemp = _n.unmarshalWString(0);
  enableIntro = _n.unmarshalBoolean();
  enableOutro = _n.unmarshalBoolean();
  enableLogo = _n.unmarshalBoolean();

}

SpiderCorba::RenderSide_ptr SpiderCorba::RenderSide_Helper::_nil() {
  return ::SpiderCorba::RenderSide::_nil();
}

::CORBA::Boolean SpiderCorba::RenderSide_Helper::is_nil(::SpiderCorba::RenderSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::RenderSide_Helper::release(::SpiderCorba::RenderSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::RenderSide_Helper::marshalObjRef(::SpiderCorba::RenderSide_ptr obj, cdrStream& s) {
  ::SpiderCorba::RenderSide::_marshalObjRef(obj, s);
}

SpiderCorba::RenderSide_ptr SpiderCorba::RenderSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::RenderSide::_unmarshalObjRef(s);
}

void SpiderCorba::RenderSide_Helper::duplicate(::SpiderCorba::RenderSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::RenderSide_ptr
SpiderCorba::RenderSide::_duplicate(::SpiderCorba::RenderSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::RenderSide_ptr
SpiderCorba::RenderSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::RenderSide_ptr
SpiderCorba::RenderSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::RenderSide_ptr
SpiderCorba::RenderSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RenderSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RenderSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_RenderSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::RenderSide::_PD_repoId = "IDL:SpiderCorba/RenderSide:1.0";


SpiderCorba::_objref_RenderSide::~_objref_RenderSide() {
  
}


SpiderCorba::_objref_RenderSide::_objref_RenderSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::RenderSide::_PD_repoId, ior, id, 1),
   _objref_SpiderDefine(ior, id)
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_RenderSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::RenderSide::_PD_repoId)
    return (::SpiderCorba::RenderSide_ptr) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::RenderSide::_PD_repoId))
    return (::SpiderCorba::RenderSide_ptr) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderCorba::RenderSide::createRenderJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cSpiderCorba_mSpiderDefine_mVideoInfo_i_cSpiderCorba_mRenderSide_mRenderConfig
class _0RL_cd_bcb7b54210ff8436_50000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_50000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::VideoInfo_var arg_1_;
  const SpiderCorba::SpiderDefine::VideoInfo* arg_1;
  SpiderCorba::RenderSide::RenderConfig_var arg_2_;
  const SpiderCorba::RenderSide::RenderConfig* arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_bcb7b54210ff8436_50000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const SpiderCorba::SpiderDefine::VideoInfo&) *arg_1 >>= _n;
  (const SpiderCorba::RenderSide::RenderConfig&) *arg_2 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_50000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = new SpiderCorba::SpiderDefine::VideoInfo;
  (SpiderCorba::SpiderDefine::VideoInfo&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();
  arg_2_ = new SpiderCorba::RenderSide::RenderConfig;
  (SpiderCorba::RenderSide::RenderConfig&)arg_2_ <<= _n;
  arg_2 = &arg_2_.in();

}

void _0RL_cd_bcb7b54210ff8436_50000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_bcb7b54210ff8436_50000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_bcb7b54210ff8436_50000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_50000000* tcd = (_0RL_cd_bcb7b54210ff8436_50000000*)cd;
  SpiderCorba::_impl_RenderSide* impl = (SpiderCorba::_impl_RenderSide*) svnt->_ptrToInterface(SpiderCorba::RenderSide::_PD_repoId);
  tcd->result = impl->createRenderJob(tcd->arg_0, *tcd->arg_1, *tcd->arg_2);


}

::CORBA::Boolean SpiderCorba::_objref_RenderSide::createRenderJob(::CORBA::Long jobId, const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo, const ::SpiderCorba::RenderSide::RenderConfig& renderCfg)
{
  _0RL_cd_bcb7b54210ff8436_50000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_60000000, "createRenderJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;
  _call_desc.arg_2 = &(::SpiderCorba::RenderSide::RenderConfig&) renderCfg;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::RenderSide::deleteRenderJob

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_30000000* tcd = (_0RL_cd_bcb7b54210ff8436_30000000*)cd;
  SpiderCorba::_impl_RenderSide* impl = (SpiderCorba::_impl_RenderSide*) svnt->_ptrToInterface(SpiderCorba::RenderSide::_PD_repoId);
  tcd->result = impl->deleteRenderJob(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_RenderSide::deleteRenderJob(::CORBA::Long jobId, const ::CORBA::WChar* renderClusterId)
{
  _0RL_cd_bcb7b54210ff8436_30000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_70000000, "deleteRenderJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = renderClusterId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::RenderSide::deleteRenderdVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_cwstring_i_cwstring
class _0RL_cd_bcb7b54210ff8436_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_80000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::WString_var arg_0_;
  const ::CORBA::WChar* arg_0;
  ::CORBA::WString_var arg_1_;
  const ::CORBA::WChar* arg_1;
};

void _0RL_cd_bcb7b54210ff8436_80000000::marshalArguments(cdrStream& _n)
{
  _n.marshalWString(arg_0,0);
  _n.marshalWString(arg_1,0);

}

void _0RL_cd_bcb7b54210ff8436_80000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalWString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalWString(0);
  arg_1 = arg_1_.in();

}

const char* const _0RL_cd_bcb7b54210ff8436_80000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_80000000* tcd = (_0RL_cd_bcb7b54210ff8436_80000000*)cd;
  SpiderCorba::_impl_RenderSide* impl = (SpiderCorba::_impl_RenderSide*) svnt->_ptrToInterface(SpiderCorba::RenderSide::_PD_repoId);
  impl->deleteRenderdVideo(tcd->arg_0, tcd->arg_1);


}

void SpiderCorba::_objref_RenderSide::deleteRenderdVideo(const ::CORBA::WChar* renderClusterId, const ::CORBA::WChar* vLocation)
{
  _0RL_cd_bcb7b54210ff8436_80000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_90000000, "deleteRenderdVideo", 19);
  _call_desc.arg_0 = renderClusterId;
  _call_desc.arg_1 = vLocation;

  _invoke(_call_desc);



}

SpiderCorba::_pof_RenderSide::~_pof_RenderSide() {}


omniObjRef*
SpiderCorba::_pof_RenderSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_RenderSide(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_RenderSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::RenderSide::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;


  return 0;
}

const SpiderCorba::_pof_RenderSide _the_pof_SpiderCorba_mRenderSide;

SpiderCorba::_impl_RenderSide::~_impl_RenderSide() {}


::CORBA::Boolean
SpiderCorba::_impl_RenderSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "createRenderJob")) {

    _0RL_cd_bcb7b54210ff8436_50000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_60000000, "createRenderJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteRenderJob")) {

    _0RL_cd_bcb7b54210ff8436_30000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_70000000, "deleteRenderJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteRenderdVideo")) {

    _0RL_cd_bcb7b54210ff8436_80000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_90000000, "deleteRenderdVideo", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_SpiderDefine*)this)->
      _impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
SpiderCorba::_impl_RenderSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::RenderSide::_PD_repoId)
    return (::SpiderCorba::_impl_RenderSide*) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::RenderSide::_PD_repoId))
    return (::SpiderCorba::_impl_RenderSide*) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_RenderSide::_mostDerivedRepoId()
{
  return ::SpiderCorba::RenderSide::_PD_repoId;
}

void
SpiderCorba::UploadSide::UploadConfig::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(vTitleTemp,0);
  _n.marshalWString(vDescTemp,0);
  _n.marshalWString(vTagsTemp,0);
  _n.marshalBoolean(enableTitle);
  _n.marshalBoolean(enableDes);
  _n.marshalBoolean(enableTags);

}

void
SpiderCorba::UploadSide::UploadConfig::operator<<= (cdrStream &_n)
{
  vTitleTemp = _n.unmarshalWString(0);
  vDescTemp = _n.unmarshalWString(0);
  vTagsTemp = _n.unmarshalWString(0);
  enableTitle = _n.unmarshalBoolean();
  enableDes = _n.unmarshalBoolean();
  enableTags = _n.unmarshalBoolean();

}

SpiderCorba::UploadSide_ptr SpiderCorba::UploadSide_Helper::_nil() {
  return ::SpiderCorba::UploadSide::_nil();
}

::CORBA::Boolean SpiderCorba::UploadSide_Helper::is_nil(::SpiderCorba::UploadSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::UploadSide_Helper::release(::SpiderCorba::UploadSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::UploadSide_Helper::marshalObjRef(::SpiderCorba::UploadSide_ptr obj, cdrStream& s) {
  ::SpiderCorba::UploadSide::_marshalObjRef(obj, s);
}

SpiderCorba::UploadSide_ptr SpiderCorba::UploadSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::UploadSide::_unmarshalObjRef(s);
}

void SpiderCorba::UploadSide_Helper::duplicate(::SpiderCorba::UploadSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::UploadSide_ptr
SpiderCorba::UploadSide::_duplicate(::SpiderCorba::UploadSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::UploadSide_ptr
SpiderCorba::UploadSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::UploadSide_ptr
SpiderCorba::UploadSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::UploadSide_ptr
SpiderCorba::UploadSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_UploadSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_UploadSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_UploadSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::UploadSide::_PD_repoId = "IDL:SpiderCorba/UploadSide:1.0";


SpiderCorba::_objref_UploadSide::~_objref_UploadSide() {
  
}


SpiderCorba::_objref_UploadSide::_objref_UploadSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::UploadSide::_PD_repoId, ior, id, 1),
   _objref_SpiderDefine(ior, id)
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_UploadSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::UploadSide::_PD_repoId)
    return (::SpiderCorba::UploadSide_ptr) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::UploadSide::_PD_repoId))
    return (::SpiderCorba::UploadSide_ptr) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderCorba::UploadSide::createUploadJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cSpiderCorba_mSpiderDefine_mVideoInfo_i_cSpiderCorba_mUploadSide_mUploadConfig
class _0RL_cd_bcb7b54210ff8436_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_a0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::VideoInfo_var arg_1_;
  const SpiderCorba::SpiderDefine::VideoInfo* arg_1;
  SpiderCorba::UploadSide::UploadConfig_var arg_2_;
  const SpiderCorba::UploadSide::UploadConfig* arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_bcb7b54210ff8436_a0000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const SpiderCorba::SpiderDefine::VideoInfo&) *arg_1 >>= _n;
  (const SpiderCorba::UploadSide::UploadConfig&) *arg_2 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_a0000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = new SpiderCorba::SpiderDefine::VideoInfo;
  (SpiderCorba::SpiderDefine::VideoInfo&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();
  arg_2_ = new SpiderCorba::UploadSide::UploadConfig;
  (SpiderCorba::UploadSide::UploadConfig&)arg_2_ <<= _n;
  arg_2 = &arg_2_.in();

}

void _0RL_cd_bcb7b54210ff8436_a0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_bcb7b54210ff8436_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_bcb7b54210ff8436_a0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_a0000000* tcd = (_0RL_cd_bcb7b54210ff8436_a0000000*)cd;
  SpiderCorba::_impl_UploadSide* impl = (SpiderCorba::_impl_UploadSide*) svnt->_ptrToInterface(SpiderCorba::UploadSide::_PD_repoId);
  tcd->result = impl->createUploadJob(tcd->arg_0, *tcd->arg_1, *tcd->arg_2);


}

::CORBA::Boolean SpiderCorba::_objref_UploadSide::createUploadJob(::CORBA::Long jobId, const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo, const ::SpiderCorba::UploadSide::UploadConfig& uploadCfg)
{
  _0RL_cd_bcb7b54210ff8436_a0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_b0000000, "createUploadJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;
  _call_desc.arg_2 = &(::SpiderCorba::UploadSide::UploadConfig&) uploadCfg;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::UploadSide::deleteUploadJob

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_c0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_30000000* tcd = (_0RL_cd_bcb7b54210ff8436_30000000*)cd;
  SpiderCorba::_impl_UploadSide* impl = (SpiderCorba::_impl_UploadSide*) svnt->_ptrToInterface(SpiderCorba::UploadSide::_PD_repoId);
  tcd->result = impl->deleteUploadJob(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_UploadSide::deleteUploadJob(::CORBA::Long jobId, const ::CORBA::WChar* uploadClusterId)
{
  _0RL_cd_bcb7b54210ff8436_30000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_c0000000, "deleteUploadJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = uploadClusterId;

  _invoke(_call_desc);
  return _call_desc.result;


}

SpiderCorba::_pof_UploadSide::~_pof_UploadSide() {}


omniObjRef*
SpiderCorba::_pof_UploadSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_UploadSide(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_UploadSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::UploadSide::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;


  return 0;
}

const SpiderCorba::_pof_UploadSide _the_pof_SpiderCorba_mUploadSide;

SpiderCorba::_impl_UploadSide::~_impl_UploadSide() {}


::CORBA::Boolean
SpiderCorba::_impl_UploadSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "createUploadJob")) {

    _0RL_cd_bcb7b54210ff8436_a0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_b0000000, "createUploadJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteUploadJob")) {

    _0RL_cd_bcb7b54210ff8436_30000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_c0000000, "deleteUploadJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_SpiderDefine*)this)->
      _impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
SpiderCorba::_impl_UploadSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::UploadSide::_PD_repoId)
    return (::SpiderCorba::_impl_UploadSide*) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::UploadSide::_PD_repoId))
    return (::SpiderCorba::_impl_UploadSide*) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_UploadSide::_mostDerivedRepoId()
{
  return ::SpiderCorba::UploadSide::_PD_repoId;
}

void
SpiderCorba::AgentSide::AuthenInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(userName,0);
  _n.marshalWString(apiKey,0);
  _n.marshalWString(clientSecret,0);
  _n.marshalWString(clientId,0);

}

void
SpiderCorba::AgentSide::AuthenInfo::operator<<= (cdrStream &_n)
{
  userName = _n.unmarshalWString(0);
  apiKey = _n.unmarshalWString(0);
  clientSecret = _n.unmarshalWString(0);
  clientId = _n.unmarshalWString(0);

}

void
SpiderCorba::AgentSide::ClusterInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(clusterIp,0);
  _n.marshalWString(userName,0);
  _n.marshalWString(password,0);

}

void
SpiderCorba::AgentSide::ClusterInfo::operator<<= (cdrStream &_n)
{
  clusterIp = _n.unmarshalWString(0);
  userName = _n.unmarshalWString(0);
  password = _n.unmarshalWString(0);

}

SpiderCorba::AgentSide_ptr SpiderCorba::AgentSide_Helper::_nil() {
  return ::SpiderCorba::AgentSide::_nil();
}

::CORBA::Boolean SpiderCorba::AgentSide_Helper::is_nil(::SpiderCorba::AgentSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::AgentSide_Helper::release(::SpiderCorba::AgentSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::AgentSide_Helper::marshalObjRef(::SpiderCorba::AgentSide_ptr obj, cdrStream& s) {
  ::SpiderCorba::AgentSide::_marshalObjRef(obj, s);
}

SpiderCorba::AgentSide_ptr SpiderCorba::AgentSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::AgentSide::_unmarshalObjRef(s);
}

void SpiderCorba::AgentSide_Helper::duplicate(::SpiderCorba::AgentSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_duplicate(::SpiderCorba::AgentSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_AgentSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_AgentSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_AgentSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::AgentSide::_PD_repoId = "IDL:SpiderCorba/AgentSide:1.0";


SpiderCorba::_objref_AgentSide::~_objref_AgentSide() {
  
}


SpiderCorba::_objref_AgentSide::_objref_AgentSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::AgentSide::_PD_repoId, ior, id, 1),
   _objref_SpiderDefine(ior, id)
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_AgentSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::AgentSide::_PD_repoId)
    return (::SpiderCorba::AgentSide_ptr) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::AgentSide::_PD_repoId))
    return (::SpiderCorba::AgentSide_ptr) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderCorba::AgentSide::onDownloadStartup

// Proxy call descriptor class. Mangled signature:
//  void_i_cwstring
class _0RL_cd_bcb7b54210ff8436_d0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_d0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::WString_var arg_0_;
  const ::CORBA::WChar* arg_0;
};

void _0RL_cd_bcb7b54210ff8436_d0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalWString(arg_0,0);

}

void _0RL_cd_bcb7b54210ff8436_d0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalWString(0);
  arg_0 = arg_0_.in();

}

const char* const _0RL_cd_bcb7b54210ff8436_d0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_d0000000* tcd = (_0RL_cd_bcb7b54210ff8436_d0000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->onDownloadStartup(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::onDownloadStartup(const ::CORBA::WChar* appId)
{
  _0RL_cd_bcb7b54210ff8436_d0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_e0000000, "onDownloadStartup", 18);
  _call_desc.arg_0 = appId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::onRenderStartup

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_d0000000* tcd = (_0RL_cd_bcb7b54210ff8436_d0000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->onRenderStartup(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::onRenderStartup(const ::CORBA::WChar* appId)
{
  _0RL_cd_bcb7b54210ff8436_d0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_f0000000, "onRenderStartup", 16);
  _call_desc.arg_0 = appId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::onUploadStartup

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_d0000000* tcd = (_0RL_cd_bcb7b54210ff8436_d0000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->onUploadStartup(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::onUploadStartup(const ::CORBA::WChar* appId)
{
  _0RL_cd_bcb7b54210ff8436_d0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_01000000, "onUploadStartup", 16);
  _call_desc.arg_0 = appId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::getLastSyncTime

// Proxy call descriptor class. Mangled signature:
//  _clonglong_i_clong
class _0RL_cd_bcb7b54210ff8436_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_11000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::LongLong result;
};

void _0RL_cd_bcb7b54210ff8436_11000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_11000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_bcb7b54210ff8436_11000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::LongLong&)result <<= _n;

}

const char* const _0RL_cd_bcb7b54210ff8436_11000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_11000000* tcd = (_0RL_cd_bcb7b54210ff8436_11000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getLastSyncTime(tcd->arg_0);


}

::CORBA::LongLong SpiderCorba::_objref_AgentSide::getLastSyncTime(::CORBA::Long mappingId)
{
  _0RL_cd_bcb7b54210ff8436_11000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_21000000, "getLastSyncTime", 16);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::AgentSide::updateLastSyntime

// Proxy call descriptor class. Mangled signature:
//  void_i_clong_i_clonglong
class _0RL_cd_bcb7b54210ff8436_31000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_31000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::LongLong arg_1;
};

void _0RL_cd_bcb7b54210ff8436_31000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_31000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::LongLong&)arg_1 <<= _n;

}

const char* const _0RL_cd_bcb7b54210ff8436_31000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_41000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_31000000* tcd = (_0RL_cd_bcb7b54210ff8436_31000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateLastSyntime(tcd->arg_0, tcd->arg_1);


}

void SpiderCorba::_objref_AgentSide::updateLastSyntime(::CORBA::Long mappingId, ::CORBA::LongLong lastSyncTime)
{
  _0RL_cd_bcb7b54210ff8436_31000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_41000000, "updateLastSyntime", 18);
  _call_desc.arg_0 = mappingId;
  _call_desc.arg_1 = lastSyncTime;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::updateDownloadedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_cSpiderCorba_mSpiderDefine_mVideoInfo
class _0RL_cd_bcb7b54210ff8436_51000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_51000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  SpiderCorba::SpiderDefine::VideoInfo_var arg_0_;
  const SpiderCorba::SpiderDefine::VideoInfo* arg_0;
};

void _0RL_cd_bcb7b54210ff8436_51000000::marshalArguments(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::VideoInfo&) *arg_0 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_51000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new SpiderCorba::SpiderDefine::VideoInfo;
  (SpiderCorba::SpiderDefine::VideoInfo&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

const char* const _0RL_cd_bcb7b54210ff8436_51000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_61000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_51000000* tcd = (_0RL_cd_bcb7b54210ff8436_51000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateDownloadedVideo(*tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::updateDownloadedVideo(const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo)
{
  _0RL_cd_bcb7b54210ff8436_51000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_61000000, "updateDownloadedVideo", 22);
  _call_desc.arg_0 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::updateRenderedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_clong_i_clong_i_cwstring
class _0RL_cd_bcb7b54210ff8436_71000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_71000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::Long arg_1;
  ::CORBA::WString_var arg_2_;
  const ::CORBA::WChar* arg_2;
};

void _0RL_cd_bcb7b54210ff8436_71000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  _n.marshalWString(arg_2,0);

}

void _0RL_cd_bcb7b54210ff8436_71000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;
  arg_2_ = _n.unmarshalWString(0);
  arg_2 = arg_2_.in();

}

const char* const _0RL_cd_bcb7b54210ff8436_71000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_71000000* tcd = (_0RL_cd_bcb7b54210ff8436_71000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateRenderedVideo(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void SpiderCorba::_objref_AgentSide::updateRenderedVideo(::CORBA::Long jobId, ::CORBA::Long processStatus, const ::CORBA::WChar* vRenderPath)
{
  _0RL_cd_bcb7b54210ff8436_71000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_81000000, "updateRenderedVideo", 20);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = processStatus;
  _call_desc.arg_2 = vRenderPath;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::updateUploadedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_clong
class _0RL_cd_bcb7b54210ff8436_91000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_91000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
};

void _0RL_cd_bcb7b54210ff8436_91000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_91000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

const char* const _0RL_cd_bcb7b54210ff8436_91000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_a1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_91000000* tcd = (_0RL_cd_bcb7b54210ff8436_91000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateUploadedVideo(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::updateUploadedVideo(::CORBA::Long jobId)
{
  _0RL_cd_bcb7b54210ff8436_91000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_a1000000, "updateUploadedVideo", 20);
  _call_desc.arg_0 = jobId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::getMonitorChannelId

// Proxy call descriptor class. Mangled signature:
//  _cwstring_i_clong
class _0RL_cd_bcb7b54210ff8436_b1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_b1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::WString_var result;
};

void _0RL_cd_bcb7b54210ff8436_b1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_b1000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_bcb7b54210ff8436_b1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalWString(result,0);

}

void _0RL_cd_bcb7b54210ff8436_b1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalWString(0);

}

const char* const _0RL_cd_bcb7b54210ff8436_b1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_c1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_b1000000* tcd = (_0RL_cd_bcb7b54210ff8436_b1000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getMonitorChannelId(tcd->arg_0);


}

::CORBA::WChar* SpiderCorba::_objref_AgentSide::getMonitorChannelId(::CORBA::Long mappingId)
{
  _0RL_cd_bcb7b54210ff8436_b1000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_c1000000, "getMonitorChannelId", 20);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for SpiderCorba::AgentSide::getClusterInfo

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mAgentSide_mClusterInfo_i_clong_i_clong
class _0RL_cd_bcb7b54210ff8436_d1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_d1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::Long arg_1;
  SpiderCorba::AgentSide::ClusterInfo_var result;
};

void _0RL_cd_bcb7b54210ff8436_d1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_d1000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;

}

void _0RL_cd_bcb7b54210ff8436_d1000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::AgentSide::ClusterInfo&) result >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_d1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::AgentSide::ClusterInfo;
  (SpiderCorba::AgentSide::ClusterInfo&)result <<= _n;

}

const char* const _0RL_cd_bcb7b54210ff8436_d1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_e1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_d1000000* tcd = (_0RL_cd_bcb7b54210ff8436_d1000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getClusterInfo(tcd->arg_0, tcd->arg_1);


}

SpiderCorba::AgentSide::ClusterInfo* SpiderCorba::_objref_AgentSide::getClusterInfo(::CORBA::Long clusterType, ::CORBA::Long mappingId)
{
  _0RL_cd_bcb7b54210ff8436_d1000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_e1000000, "getClusterInfo", 15);
  _call_desc.arg_0 = clusterType;
  _call_desc.arg_1 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for SpiderCorba::AgentSide::getAuthenInfo

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mAgentSide_mAuthenInfo_i_clong
class _0RL_cd_bcb7b54210ff8436_f1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bcb7b54210ff8436_f1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::AgentSide::AuthenInfo_var result;
};

void _0RL_cd_bcb7b54210ff8436_f1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_f1000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_bcb7b54210ff8436_f1000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::AgentSide::AuthenInfo&) result >>= _n;

}

void _0RL_cd_bcb7b54210ff8436_f1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::AgentSide::AuthenInfo;
  (SpiderCorba::AgentSide::AuthenInfo&)result <<= _n;

}

const char* const _0RL_cd_bcb7b54210ff8436_f1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_bcb7b54210ff8436_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bcb7b54210ff8436_f1000000* tcd = (_0RL_cd_bcb7b54210ff8436_f1000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getAuthenInfo(tcd->arg_0);


}

SpiderCorba::AgentSide::AuthenInfo* SpiderCorba::_objref_AgentSide::getAuthenInfo(::CORBA::Long mappingId)
{
  _0RL_cd_bcb7b54210ff8436_f1000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_02000000, "getAuthenInfo", 14);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}

SpiderCorba::_pof_AgentSide::~_pof_AgentSide() {}


omniObjRef*
SpiderCorba::_pof_AgentSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_AgentSide(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_AgentSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::AgentSide::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;


  return 0;
}

const SpiderCorba::_pof_AgentSide _the_pof_SpiderCorba_mAgentSide;

SpiderCorba::_impl_AgentSide::~_impl_AgentSide() {}


::CORBA::Boolean
SpiderCorba::_impl_AgentSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "onDownloadStartup")) {

    _0RL_cd_bcb7b54210ff8436_d0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_e0000000, "onDownloadStartup", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "onRenderStartup")) {

    _0RL_cd_bcb7b54210ff8436_d0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_f0000000, "onRenderStartup", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "onUploadStartup")) {

    _0RL_cd_bcb7b54210ff8436_d0000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_01000000, "onUploadStartup", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getLastSyncTime")) {

    _0RL_cd_bcb7b54210ff8436_11000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_21000000, "getLastSyncTime", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateLastSyntime")) {

    _0RL_cd_bcb7b54210ff8436_31000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_41000000, "updateLastSyntime", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateDownloadedVideo")) {

    _0RL_cd_bcb7b54210ff8436_51000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_61000000, "updateDownloadedVideo", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateRenderedVideo")) {

    _0RL_cd_bcb7b54210ff8436_71000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_81000000, "updateRenderedVideo", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateUploadedVideo")) {

    _0RL_cd_bcb7b54210ff8436_91000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_a1000000, "updateUploadedVideo", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getMonitorChannelId")) {

    _0RL_cd_bcb7b54210ff8436_b1000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_c1000000, "getMonitorChannelId", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getClusterInfo")) {

    _0RL_cd_bcb7b54210ff8436_d1000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_e1000000, "getClusterInfo", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getAuthenInfo")) {

    _0RL_cd_bcb7b54210ff8436_f1000000 _call_desc(_0RL_lcfn_bcb7b54210ff8436_02000000, "getAuthenInfo", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_SpiderDefine*)this)->
      _impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
SpiderCorba::_impl_AgentSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::AgentSide::_PD_repoId)
    return (::SpiderCorba::_impl_AgentSide*) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::AgentSide::_PD_repoId))
    return (::SpiderCorba::_impl_AgentSide*) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_AgentSide::_mostDerivedRepoId()
{
  return ::SpiderCorba::AgentSide::_PD_repoId;
}

POA_SpiderCorba::SpiderDefine::~SpiderDefine() {}

POA_SpiderCorba::DownloadSide::~DownloadSide() {}

POA_SpiderCorba::RenderSide::~RenderSide() {}

POA_SpiderCorba::UploadSide::~UploadSide() {}

POA_SpiderCorba::AgentSide::~AgentSide() {}

